{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","curremtTarget","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.ccd2f73f.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getFunName } from '../helpers';\r\n\r\nclass StorePicker extends React.Component {\r\n  myInput = React.createRef();\r\n\r\n  static propTypes = {\r\n    history: PropTypes.object\r\n  }\r\n\r\n  goToStore = event => {\r\n    // 1. Stop the form from submitting\r\n    event.preventDefault();\r\n    // 2. Get the text from that input\r\n    const storeName = this.myInput.current.value;\r\n    // 3. Change the page to /store/whatever-they-entered\r\n    this.props.history.push(`/store/${storeName}`);\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Please Enter A Store</h2>\r\n        <input \r\n          type=\"text\" \r\n          ref={this.myInput}\r\n          required placeholder=\"Store Name\" defaultValue={getFunName()} \r\n        />\r\n        <button type=\"submit\">Visit Store →</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = props => (\r\n  <header className=\"top\">\r\n     <h1>\r\n       Catch \r\n       <span className=\"ofThe\">\r\n          <span className=\"of\">Of</span>\r\n          <span className=\"the\">The</span>\r\n        </span>\r\n        Day\r\n     </h1>\r\n     <h3 className=\"tagline\">\r\n        <span>{props.tagline}</span>\r\n     </h3>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n    tagline:PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func\r\n  }\r\n  renderOrder = key => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === \"available\";\r\n    const transitionOptions = {\r\n      classNames:\"order\",\r\n      key,\r\n      timeout:{ enter:500, exit:500 }\r\n    };\r\n    // Make sure the fish is loaded before we conrinue\r\n    if (!fish) return null;\r\n      \r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            Sorry, {fish ? fish.name : \"fish\"} is no longer available\r\n          </li>\r\n        </CSSTransition> \r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter:500, exit:500 }}\r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name}\r\n            {formatPrice(count*fish.price)}\r\n            <button onClick={() => this.props.removeFromOrder(key)}>\r\n              &times; \r\n            </button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  }\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === \"available\";\r\n      if(isAvailable) {\r\n        return prevTotal + (count*fish.price);\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    addFish: PropTypes.func\r\n  }\r\n    \r\n  createFish = event => {\r\n    // 1. stop from submitting\r\n    event.preventDefault();\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value),\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value\r\n    };\r\n    this.props.addFish(fish);\r\n    // refresh the form\r\n    event.currentTarget.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\r\n        <select name=\"status\" ref={this.statusRef}> \r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n        <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component {\r\n    \r\n  static propTypes = {\r\n    fish: PropTypes.shape ({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number\r\n    }),\r\n    index: PropTypes.string,\r\n    updateFish: PropTypes.func,\r\n    \r\n  }\r\n    \r\n  handleChange = event => {\r\n    console.log(event.curremtTarget.value);\r\n    // update that fish\r\n    // 1. Take a copy of the current fish\r\n    console.log(event.currentTarget.name);\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    };\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input \r\n          type=\"text\" \r\n          name=\"name\" \r\n          onChange={this.handleChange}\r\n          value={this.props.fish.name} \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          name=\"price\" \r\n          onChange={this.handleChange}\r\n          value={this.props.fish.price} \r\n        />\r\n        <select \r\n          type=\"text\" \r\n          name=\"status\" \r\n          onChange={this.handleChange}\r\n          value={this.props.fish.status}>\r\n            <option value=\"available\">Fresh!</option>\r\n            <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea \r\n          name=\"desc\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.desc} \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          name=\"image\" \r\n          onChange={this.handleChange}\r\n          value={this.props.fish.image} \r\n        />\r\n        <button onClick = {() => this.props.deleteFish (this.props.index)}>\r\n          Remove Fish\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = props => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory Login</h2>\r\n    <p>Sing in to manage your store's inventory.</p>\r\n    <button \r\n      className=\"github\" \r\n      onClick={() => props.authenticate('Github')}\r\n    >\r\n      Log in with GitHub\r\n    </button>\r\n    <button \r\n      className=\"twitter\" \r\n      onClick={() => props.authenticate('Twitter')}\r\n    >\r\n      Log in with Twitter\r\n    </button>\r\n    <button \r\n      className=\"facebook\" \r\n      onClick={() => props.authenticate('Facebook')}\r\n    >\r\n      Log in with Facebook\r\n    </button>\r\n  </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp ({\r\n  apiKey: \"AIzaSyDRZXVT2mF0PPCFsL0DzmRx_5ronP09yT0\",\r\n  authDomain: \"catch-of-the-day-wes-bos-d09ac.firebaseapp.com\",\r\n  databaseURL: \"https://catch-of-the-day-wes-bos-d09ac.firebaseio.com\",\r\n});\r\n\r\nconst base = Rebase.createClass (firebaseApp.database());\r\n\r\n// This is a named export\r\nexport { firebaseApp };\r\n\r\n// This is a default export\r\nexport default base;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport Login from './Login';\r\nimport base, { firebaseApp } from '../base';\r\n\r\n\r\nclass Inventory extends React.Component {\r\n\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func\r\n  };   \r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged (user => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      };\r\n    });\r\n  };\r\n\r\n  authHandler = async (authData) => {\r\n    // 1. Look up the current store in the firebase database\r\n    const store = await base.fetch(this.props.storeId, {context: this });\r\n    console.log(store);\r\n    // 2. Claim it if there is no owner\r\n    if (!store.owner) {\r\n      // save it as our own\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid\r\n      });\r\n    }\r\n    // 3. Set the state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.uid,\r\n      owner: store.owner || authData.user.uid\r\n    })\r\n  };\r\n\r\n  authenticate = provider => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then(this.authHandler);\r\n  };\r\n    \r\n  logout = async() => {\r\n    console.log('Logging out!');\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  }\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log out!</button>  \r\n    // 1. Check if they are logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    };\r\n      \r\n    // 2. Check if they are not the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    };\r\n      \r\n    // 3. They must be the owner, just render the inventory\r\n    return (\r\n     <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map(key => (\r\n          <EditFishForm \r\n            key={key} \r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick = {this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n  static propTypes = {\r\n    details: PropTypes.shape ({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number\r\n    }),\r\n    addToOrder: PropTypes.func\r\n  }\r\n  render() {\r\n    const {image, name, price, desc, status} = this.props.details;\r\n    const isAvailable = status === \"available\";\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button \r\n          disabled = {!isAvailable} \r\n          onClick={() => this.props.addToOrder(this.props.index)}\r\n        >\r\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\n\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {}\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    // first reinstate our localStorage\r\n    const localStorageRef= localStorage.getItem(params.storeId);\r\n    if (localStorageRef) {\r\n      this.setState ({ order:JSON.parse(localStorageRef) });\r\n    };\r\n      \r\n    this.ref = base.syncState (`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: 'fishes'\r\n    });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.state.order);\r\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  };\r\n\r\n  addFish = fish => {\r\n    // 1. Take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to that fishes variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // 3. Set the new fishes object to state\r\n    this.setState({ fishes });\r\n  };  \r\n\r\n  updateFish = (key, updateFish) => {\r\n    // 1. Take a copy of the current state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Update the state\r\n    fishes[key] = updateFish;\r\n    // 3. Set that to state\r\n    this.setState ({ fishes });\r\n  };\r\n\r\n  deleteFish = (key) => {\r\n    // 1. Take a copy os the state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Update the state\r\n    fishes[key] = null;\r\n    // 3. Set the state\r\n    this.setState ({ fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n      this.setState ({fishes: sampleFishes});\r\n  };\r\n\r\n  addToOrder = key => {\r\n    // 1. Take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order});\r\n  };\r\n  \r\n  removeFromOrder = key => {\r\n    // 1. Take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Remove that item from order\r\n    delete order[key];\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map(key => (\r\n              <Fish \r\n                key={key} \r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order \r\n          fishes={this.state.fishes} \r\n          order={this.state.order} \r\n          removeFromOrder={this.removeFromOrder}\r\n        />\r\n        <Inventory \r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes = {this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h2>Not Found!!!</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router';\r\nimport './css/style.css';\r\n\r\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}